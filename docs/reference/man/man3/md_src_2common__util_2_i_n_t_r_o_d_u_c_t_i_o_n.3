.TH "md_src_2common__util_2_i_n_t_r_o_d_u_c_t_i_o_n" 3 "common_util" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_2common__util_2_i_n_t_r_o_d_u_c_t_i_o_n \- common_util 
.PP
 
.SH "Overview"
.PP
common_util is a general-purpose C++ utility library, include the following functions:
.PP
.IP "\(bu" 2
Time utilities
.IP "\(bu" 2
Function timer
.IP "\(bu" 2
Filepath utilities
.IP "\(bu" 2
Filesystem utilities
.IP "\(bu" 2
String utilities
.IP "\(bu" 2
Data formatting
.IP "\(bu" 2
Singleton pattern macro definition
.PP
.PP
common_util is implemented in modern C++ syntax (C++11 and above), using cutl as the namespace\&. The naming convention of all interfaces is consistent with the STL, and it can be used as an extensions of C++ standard library\&. You can use common_util just like using the STL, For example:
.PP
.PP
.nf
 ++
// Data formatting
std::cout << "fmt_uint: " << cutl::fmt_uint(12, 5) << std::endl;
std::cout << "fmt_double: " << cutl::fmt_double(3\&.141592653, 4) << std::endl;
std::cout << "fmt_filesize: " << cutl::fmt_filesize(33600) << std::endl;
// Get the current system time
auto now = cutl::datetime::now();
std::cout << "current time(UTC time): " << now\&.utctime() << std::endl;
std::cout << "current time(local time): " << now\&.format() << std::endl;
.fi
.PP
.SH "Library Features"
.PP
.IP "\(bu" 2
\fBSimple and lightweigh\fP: Based on basic C++ syntax and STL, it independent on any third-party libraries\&.
.IP "\(bu" 2
\fBMulti-platform support\fP: Supports multiple platforms such as Linux/macOS/Windows, it can be compiled and run on multiple platforms\&.
.IP "\(bu" 2
\fBClean code\fP: The code style is clean, and the naming convention is consistent with the STL, you can use this library just like use the C++ standard library\&.
.IP "\(bu" 2
\fBComprehensive documentation\fP: All exported header files have detail comments, it has complete API reference and usage demos\&.
.IP "\(bu" 2
\fBC++ version requirement\fP: C++11 and above versions\&.
.PP
.SH "Testing Platforms"
.PP
This library has been tested and verified on the following platforms:
.PP
Operating System Platform and Version   C++ Compiler and Version   Testing Status   Remarks    Windows 10   Visual Studio 2015   Verified   Ubuntu 20\&.04\&.4   GNU GCC 9\&.4\&.0   Verified   macOS xxx   xxx   Verified   Android   To be verified   iOS   To be verified   HarmonyOS   To be verified   
.SH "Related Documents"
.PP
.IP "\(bu" 2
API Reference: \fRdocs/reference/html/index\&.html\fP
.IP "\(bu" 2
User Guide: \fRcommon_util wiki\fP 
.PP

